{"wiki_id": "http://www.wikidata.org/entity/Q5046597", "itemLabel": "Carroll Morgan", "itemDescription": "computer scientist", "wikipedia_url": "https://en.wikipedia.org/wiki/Carroll_Morgan_(computer_scientist)", "wikipedia_page": {"main": "Charles Carroll Morgan (born 1952) is an American computer scientist who moved to Australia in his early teens. He completed his education there (high school, university, several years in industry), including a Doctor of Philosophy (Ph.D.) degree from the University of Sydney, and then moved to the United Kingdom in the early 1980s. In 2000, he returned to Australia.\nDuring the 1980s and 1990s, Morgan was based at the Oxford University Computing Laboratory in England as a researcher and lecturer working in the area of formal methods, and a Fellow of Pembroke College. Having been influenced by the Z notation of Jean-Raymond Abrial, he authored Programming from Specifications as an attempt to combine the high-level specification aspects of Z, with the rigorous computer program derivation methods of Edsger W. Dijkstra. His treatment concentrated on elementary program constructs to make the material accessible to undergraduates in their early years. Some of the ideas there were later incorporated as elements of the B-Method by Abrial, when Abrial returned in Oxford in the last half of the 1980s.\nTogether with Annabelle McIver, Morgan later authored Abstraction, Refinement and Proof for Probabilistic Systems, in which the same themes were pursued for probabilistic programs.Morgan is now a professor in the School of Computer Science and Engineering at the University of New South Wales, and a Senior Principal Researcher at Trustworthy Systems, part of CSIRO's Data61, both in Australia. His main research interests are probabilistic models for computer security and concurrency. He is a known proponent of a formalized approach to program development called the refinement calculus. He has authored many papers.\nHe is involved with developing international standards in programming and informatics, as an active member of several International Federation for Information Processing (IFIP) working groups, including IFIP Working Group 2.1 on Algorithmic Languages and Calculi, which specified, maintains, and supports the programming languages ALGOL 60 and ALGOL 68.", "link_mentions": [{"page": "List of computer scientists", "response": ["* Carroll Morgan \u2013 formal methods"]}, {"page": "Edsger W. Dijkstra", "response": ["From the 1970s, Dijkstra's chief interest was formal verification. In 1976 Dijkstra published a seminal book, A Discipline of Programming, which put forward his method of systematic development of programs together with their correctness proofs. In his exposition he used his 'Guarded Command Language'. The language, with its reliance on non-determinism, the adopted weakest precondition semantics and the proposed development method has had a considerable impact on the field to this day. The refinement calculus, originally proposed by Ralph-Johan Back and developed by Carroll Morgan, is an extension of Dijkstra's weakest precondition calculus, where program statements are modeled as predicate transformers."]}, {"page": "Program derivation", "response": ["* Carroll Morgan (computer scientist), Programming from Specifications,  International Series in Computer Science (2nd ed.), Prentice-Hall, 1998."]}]}}