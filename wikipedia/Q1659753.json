{"wiki_id": "http://www.wikidata.org/entity/Q1659753", "itemLabel": "Mike Paterson", "itemDescription": "British computer scientist", "wikipedia_url": "https://en.wikipedia.org/wiki/Mike_Paterson", "wikipedia_page": {"main": "Michael Stewart Paterson, is a British computer scientist, who was the director of the Centre for Discrete Mathematics and its Applications (DIMAP) at the University of Warwick until 2007, and chair of the department of computer science in 2005.\nHe received his Doctor of Philosophy (Ph.D.) from the University of Cambridge in 1967, under the supervision of David Park. He spent three years at Massachusetts Institute of Technology (MIT) and moved to University of Warwick in 1971, where he remains Professor Emeritus.Paterson is an expert on theoretical computer science with more than 100 publications, especially the design and analysis of algorithms and computational complexity. Paterson's distinguished career was recognised with the EATCS Award in 2006, and a workshop in honour of his 66th birthday in 2008, including contributions of several Turing Award and G\u00f6del Prize laureates. A further workshop was held in 2017 in honour of his 75th birthday, co-located with the workshop for the 10th anniversary of the DIMAP centre. For his work on distributed computing with Fischer and Lynch, he received the Dijkstra Prize in 2001, and his work with Dyer and Goldberg on counting graph homomorphisms received a best paper award at the ICALP conference in 2006. Mike Paterson received a Lester R. Ford Award in 2010. He is a Fellow of the Royal Society since 2001 and been president of the European Association for Theoretical Computer Science (EATCS). According to EATCS president Maurice Nivat, Paterson played a great role in the late 1960s in the recognition of computer science as a science, \"and that theoretical computer science, which is very close to mathematics but distinct in its motivation and inspiration, is indeed a challenging and fruitful field of research.\"Paterson is also an enthusiastic mountaineer.", "link_mentions": [{"page": "List of computer scientists", "response": ["* Mike Paterson \u2013 algorithms, analysis of algorithms (complexity)"]}, {"page": "List of programmers", "response": ["*Mike Paterson \u2013 algorithms, analysis of algorithms (complexity)"]}, {"page": "European Association for Theoretical Computer Science", "response": ["| Mike Paterson"]}, {"page": "Nancy Lynch", "response": ["Her 1985 work with Michael J. Fischer and Mike Paterson on consensus problems received the PODC Influential-Paper Award in 2001. Their work showed that in an asynchronous distributed system, consensus is impossible if there is one processor that crashes. On their contribution, Jennifer Welch wrote that \"this result has had a monumental impact in distributed computing, both theory and practice. Systems designers were motivated to clarify their claims concerning under what circumstances the systems work.\""]}, {"page": "Paterson (surname)", "response": ["*Mike Paterson, Professor of Computer Science at the University of Warwick"]}, {"page": "Consensus (computer science)", "response": ["In a fully asynchronous system there is no consensus solution that can tolerate one or more crash failures even when only requiring the non triviality property. This result is sometimes called the FLP impossibility proof named after the authors Michael J. Fischer, Nancy Lynch, and Mike Paterson who were awarded a Dijkstra Prize for this significant work. The FLP result has been mechanically verified to hold even under fairness assumptions.   However, FLP does not state that consensus can never be reached: merely that under the model's assumptions, no algorithm can always reach consensus in bounded time. In practice it is highly unlikely to occur."]}, {"page": "Paul R. Halmos \u2013 Lester R. Ford Award", "response": ["* 2010:  Mike Paterson and Uri Zwick"]}, {"page": "Enfield Grammar School", "response": ["*Professor Mike Paterson, F.R.S., computer scientist, University of Warwick"]}, {"page": "Atomic broadcast", "response": ["A fundamental result in distributed computing is that achieving consensus in asynchronous systems in which even one crash failure can occur is impossible in the most general case.  This was shown in 1985 by Michael J. Fischer, Nancy Lynch, and Mike Paterson, and is sometimes called the FLP result. Since consensus and atomic broadcast are equivalent, FLP applies also to atomic broadcast. The FLP result does not prohibit the implementation of atomic broadcast in practice, but it does require making less stringent assumptions than FLP in some respect, such as about processor and communication timings."]}]}}