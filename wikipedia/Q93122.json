{"wiki_id": "http://www.wikidata.org/entity/Q93122", "itemLabel": "Christopher Strachey", "itemDescription": "British computer scientist", "wikipedia_url": "https://en.wikipedia.org/wiki/Christopher_Strachey", "wikipedia_page": {"main": "Christopher S. Strachey (; 16 November 1916 - 18 May 1975) was a British computer scientist. He was one of the founders of denotational semantics, and a pioneer in programming language design and computer time-sharing. He was a member of the Strachey family, prominent in government, arts, administration, and academia.\n\n", "link_mentions": [{"page": "Video game", "response": ["Early video games use interactive electronic devices with various display formats. The earliest example is from 1947\u2014a \"Cathode ray tube amusement device\" was filed for a patent on 25 January 1947, by Thomas T. Goldsmith Jr. and Estle Ray Mann, and issued on 14 December 1948, as U.S. Patent 2455992. Inspired by radar display technology, it consists of an analog device allowing a user to control a vector-drawn dot on the screen to simulate a missile being fired at targets, which are drawings fixed to the screen. Other early examples include Christopher Strachey's Draughts game, the Nimrod computer at the 1951 Festival of Britain; OXO, a tic-tac-toe Computer game by Alexander S. Douglas for the EDSAC in 1952; Tennis for Two, an electronic interactive game engineered by William Higinbotham in 1958; and Spacewar!, written by MIT students Martin Graetz, Steve Russell, and Wayne Wiitanen's on a DEC PDP-1 computer in 1961. Each game has different means of display: NIMROD has a panel of lights to play the game of Nim, OXO has a graphical display to play tic-tac-toe, Tennis for Two has an oscilloscope to display a side view of a tennis court, and Spacewar! has the DEC PDP-1's vector display to have two spaceships battle each other."]}, {"page": "Currying", "response": ["The name \"currying\", coined by Christopher Strachey in 1967, is a reference to logician Haskell Curry. The alternative name \"Sch\u00f6nfinkelisation\" has been proposed as a reference to Moses Sch\u00f6nfinkel.I. Heim and A. Kratzer (1998). Semantics in Generative Grammar. Blackwell. In the mathematical context, the principle can be traced back to work in 1893 by Frege."]}, {"page": "Camel case", "response": ["In the 1970s and 1980s, medial capitals were adopted as a standard or alternative naming convention for multi-word identifiers in several programming languages. The precise origin of the convention in computer programming has not yet been settled. A 1954 conference proceedings occasionally informally referred to IBM's Speedcoding system as \"SpeedCo\". Christopher Strachey's paper on GPM (1965), shows a program that includes some medial capital identifiers, including \"NextCh\" and \"WriteSymbol\"."]}, {"page": "List of computer scientists", "response": ["* Christopher Strachey \u2013 denotational semantics"]}, {"page": "Computer music", "response": ["The first music to be performed in England was a performance of the British National Anthem that was programmed by Christopher Strachey on the Ferranti Mark 1, late in 1951. Later that year, short extracts of three pieces were recorded there by a BBC outside broadcasting unit: the National Anthem, \"Ba, Ba Black Sheep, and \"In the Mood\" and this is recognised as the earliest recording of a computer to play music as the CSIRAC music was never recorded. This recording can be heard at the this Manchester University site. Researchers at the University of Canterbury, Christchurch declicked and restored this recording in 2016 and the results may be heard on SoundCloud."]}, {"page": "Electronic music", "response": ["The world's first computer to play music was CSIRAC, which was designed and built by Trevor Pearcey and Maston Beard. Mathematician Geoff Hill programmed the CSIRAC to play popular musical melodies from the very early 1950s. In 1951 it publicly played the Colonel Bogey March, of which no known recordings exist, only the accurate reconstruction.. However, CSIRAC played standard repertoire and was not used to extend musical thinking or composition practice. CSIRAC was never recorded, but the music played was accurately reconstructed. The oldest known recordings of computer-generated music were played by the Ferranti Mark 1 computer, a commercial version of the Baby Machine from the University of Manchester in the autumn of 1951. The music program was written by Christopher Strachey.", "The first music to be performed in England was a performance of the British National Anthem that was programmed by Christopher Strachey on the Ferranti Mark I, late in 1951. Later that year, short extracts of three pieces were recorded there by a BBC outside broadcasting unit: the National Anthem, \"Ba, Ba Black Sheep\", and \"In the Mood\" and this is recognised as the earliest recording of a computer to play music. This recording can be heard at this Manchester University site. Researchers at the University of Canterbury, Christchurch declicked and restored this recording in 2016 and the results may be heard on SoundCloud."]}, {"page": "List of programmers", "response": ["*Christopher Strachey \u2013 draughts playing program"]}, {"page": "God Save the Queen", "response": ["Musical notes were first generated by a computer programmed by Alan Turing at the Computing Machine Laboratory of the University of Manchester in 1948. The first music proper, a performance of the National Anthem was programmed by Christopher Strachey on the Mark II Manchester Electronic Computer at same venue, in 1951. Later that year, short extracts of three pieces, the first being the National Anthem, were recorded there by a BBC outside broadcasting unit: the other pieces being \"Ba Ba Black Sheep\", and \"In the Mood\". Researchers at the University of Canterbury, Christchurch restored the acetate master disc in 2016 and the results may be heard on SoundCloud."]}, {"page": "History of the Internet", "response": ["The earliest computers were connected directly to terminals used by an individual user. Christopher Strachey, who became Oxford University's first Professor of Computation, filed a patent application for time-sharing in February 1959. In June that year, he gave a paper \"Time Sharing in Large Fast Computers\" at the UNESCO Information Processing Conference in Paris where he passed the concept on to J. C. R. Licklider of M.I.T..F. J. Corbat\u00f3, et al., The Compatible Time-Sharing System A Programmer's Guide (MIT Press, 1963) . \"the first paper on time-shared computers by C. Strachey at the June 1959 UNESCO Information Processing conference\". Licklider, Vice President at Bolt Beranek and Newman, Inc., went on to propose a computer network in his January 1960 paper Man-Computer Symbiosis:"]}, {"page": "Timeline of programming languages", "response": ["| Barron, Christopher Strachey, et al."]}, {"page": "Referential transparency", "response": ["The term appeared in its contemporary computer science usage, in the discussion of variables in programming languages, in Christopher Strachey's seminal set of lecture notes Fundamental Concepts in Programming Languages (1967). The lecture notes referenced Quine's Word and Object in the bibliography."]}, {"page": "Time-sharing", "response": ["Christopher Strachey, who became Oxford University's first professor of computation, filed a patent application for \"time-sharing\" in February 1959. He gave a paper \"Time Sharing in Large Fast Computers\" at the first UNESCO Information Processing Conference in Paris in June that year, where he passed the concept on to J. C. R. Licklider. This paper is credited by the MIT Computation Center in 1963 as \"the first paper on time-shared computers\".F. J. Corbat\u00f3, et al., The Compatible Time-Sharing System A Programmer's Guide (MIT Press, 1963) . \"To establish the context of the present work, it is informative to trace the development of time-sharing at MIT. Shortly after the first paper on time-shared computers by C. Strachey at the June 1959 UNESCO Information Processing conference, H.M. Teager and J. McCarthy delivered an unpublished paper \"Time-Shared Program Testing\" at the August 1959 ACM Meeting.\""]}, {"page": "Tony Hoare", "response": ["He became the Professor of Computing Science at the Queen's University of Belfast in 1968, and in 1977 returned to Oxford as the Professor of Computing to lead the Programming Research Group in the Oxford University Computing Laboratory (now Department of Computer Science, University of Oxford), following the death of Christopher Strachey. He is now an Emeritus Professor there, and is also a principal researcher at Microsoft Research in Cambridge, England.Microsoft home page \u2013 short biographyOral history interview with C. A. R. Hoare at Charles Babbage Institute, University of Minnesota, Minneapolis. \u2013 The original article on monitors"]}, {"page": "Denotational semantics", "response": ["Broadly speaking, denotational semantics is concerned with finding mathematical objects called domains that represent what programs do.  For example, programs (or program phrases) might be represented by partial functionsDana S. Scott. Outline of a mathematical theory of computation. Technical Monograph PRG-2, Oxford University Computing Laboratory, Oxford, England, November 1970.Dana Scott and Christopher Strachey. Toward a mathematical semantics for computer languages Oxford Programming Research Group Technical Monograph. PRG-6.  1971. or by gamesJan J\u00fcrjens. J. Games In The Semantics Of Programming Languages \u2013 An Elementary Introduction. Synthese 133, 131\u2013158 (2002). https://doi.org/10.1023/A:1020883810034 between the environment and the system.", "Denotational semantics originated in the work of Christopher Strachey and Dana Scott published in the early 1970s. As originally developed by Strachey and Scott, denotational semantics provided the meaning of a computer program as a function that mapped input into output. To give meanings to recursively defined programs, Scott proposed working with continuous functions between domains, specifically complete partial orders. As described below, work has continued in investigating appropriate denotational semantics for aspects of programming languages such as sequentiality, concurrency, non-determinism and local state."]}, {"page": "Timeline of computing 1950\u20131979", "response": ["The Mark 1 is a commercial version of the Manchester Mark 1 machine from the University of Manchester. The music program was written by Christopher Strachey.", "|Christopher Strachey, who became Oxford University's first professor of computation, filed a patent application for time-sharing. He passed the concept on to J. C. R. Licklider at a UNESCO-sponsored conference on Information Processing in Paris that year."]}, {"page": "Dana Scott", "response": ["Dana Stewart Scott (born October 11, 1932) is an American logician who is the emeritus Hillman University Professor of Computer Science, Philosophy, and Mathematical Logic at Carnegie Mellon University; he is now retired and lives in Berkeley, California. His work on automata theory earned him the Turing Award in 1976, while his collaborative work with Christopher Strachey in the 1970s laid the foundations of modern approaches to the semantics of programming languages. He has worked also on modal logic, topology, and category theory.", "This period saw Scott working with Christopher Strachey, and the two"]}, {"page": "Michael A. Jackson", "response": ["Born in Birmingham to Montagu M. Jackson and Bertha (Green) Jackson, Jackson was educated at Harrow School in Harrow, London, England. There he was taught by Christopher Strachey and wrote his first program under Strachey's guidance. From 1954 to 1958, he studied classics (known as \"Greats\") at Merton College, Oxford; a fellow student, two years ahead of him, was C. A. R. Hoare. They shared an interest in logic, which was studied as part of Greats at Oxford."]}, {"page": "Programming Research Group", "response": ["The PRG was founded by Christopher Strachey (1916\u20131975)  in 1965. It was originally located at 45 Banbury Road."]}, {"page": "Compatible Time-Sharing System", "response": ["In June 1959, Christopher Strachey published a paper \"Time Sharing in Large Fast Computers\" at the UNESCO Information Processing Conference in Paris, where he envisaged a programmer debugging a program at a console (like a teletype) connected to the computer, while another program was running in the computer at the same time.F. J. Corbat\u00f3, et al., The Compatible Time-Sharing System A Programmer's Guide (MIT Press, 1963) . Describe the system and its commandsJohn McCarthy, Reminiscences on the History of Time Sharing  (Stanford University 1983). Debugging programs was an important problem at that time, because with batch processing, it then often took a day from submitting a changed code, to getting the results. John McCarthy wrote a memo about that at MIT, after which a preliminary study committee and a working committee were established at MIT, to develop time sharing. The committees envisaged many users using the computer at the same time, decided the details of implementing such system at MIT, and started the development of the system."]}, {"page": "J. C. R. Licklider", "response": ["Licklider left MIT to become a vice president at Bolt Beranek and Newman in 1957. He learned about time-sharing from Christopher Strachey at a UNESCO-sponsored conference on Information Processing in Paris in 1959.F. J. Corbat\u00f3, et al., The Compatible Time-Sharing System A Programmer's Guide (MIT Press, 1963) . \"To establish the context of the present work, it is informative to trace the development of time-sharing at MIT. Shortly after the first paper on time-shared computers by C. Strachey at the June 1959 UNESCO Information Processing conference, H.M. Teager and J. McCarthy delivered an unpublished paper \"Time-Shared Program Testing\" at the August 1959 ACM Meeting.\" At BBN, he developed the BBN Time-Sharing System and conducted the first public demonstration of time-sharing."]}, {"page": "Polymorphism (computer science)", "response": ["Interest in polymorphic type systems developed significantly in the 1960s, with practical implementations beginning to appear by the end of the decade.  Ad hoc polymorphism and parametric polymorphism were originally described in Christopher Strachey's Fundamental Concepts in Programming Languages, where they are listed as \"the two main classes\" of polymorphism.  Ad hoc polymorphism was a feature of Algol 68, while parametric polymorphism was the core feature of ML's type system.", "Christopher Strachey chose the term ad hoc polymorphism to refer to polymorphic functions that can be applied to arguments of different types, but that behave differently depending on the type of the argument to which they are applied (also known as function overloading or operator overloading). The term \"ad hoc\" in this context is not intended to be pejorative; it refers simply to the fact that this type of polymorphism is not a fundamental feature of the type system. In the Pascal / Delphi example below, the Add functions seem to work generically over various types when looking at the invocations, but are considered to be two entirely distinct functions by the compiler for all intents and purposes:"]}, {"page": "John McCarthy (computer scientist)", "response": ["* Christopher Strachey, filed a patent for time-sharing in early 1959"]}, {"page": "1916 in science", "response": ["* 16 November \u2013 Christopher Strachey (died 1975), English computer scientist."]}, {"page": "Non-English-based programming languages", "response": ["The concept of international style programming languages was inspired by the work of British computer scientists Christopher Strachey, Peter Landin, and others. It represents a class of languages of which the line of the algorithmic languages ALGOL was exemplary."]}, {"page": "Ad hoc polymorphism", "response": ["In programming languages, ad hoc polymorphismC. Strachey, Fundamental concepts in programming languages. Lecture notes for International Summer School in Computer Programming, Copenhagen, August 1967 is a kind of polymorphism in which polymorphic functions can be applied to arguments of different types, because a polymorphic function can denote a number of distinct and potentially heterogeneous implementations depending on the type of argument(s) to which it is applied. When applied to object-oriented or procedural concepts, it is also known as function overloading or operator overloading. The term ad hoc in this context is not intended to be pejorative; it refers simply to the fact that this type of polymorphism is not a fundamental feature of the type system. This is in contrast to parametric polymorphism, in which polymorphic functions are written without mention of any specific type, and can thus apply a single abstract implementation to any number of types in a transparent way. This classification was introduced by Christopher Strachey in 1967."]}, {"page": "List of important publications in computer science", "response": ["* Christopher Strachey"]}, {"page": "Continuation", "response": ["Christopher Strachey, Christopher P. Wadsworth and John C. Reynolds brought the term continuation into prominence in their work in the field of denotational semantics that makes extensive use of continuations to allow sequential programs to be analysed in terms of functional programming semantics.", "*Christopher Strachey and Christopher P. Wadsworth.  Continuations: a Mathematical semantics for handling full jumps Technical Monograph PRG-11.  Oxford University Computing Laboratory.  January 1974.  Reprinted in Higher Order and Symbolic Computation, 13(1/2):135\u2014152, 2000, with a foreword by Christopher P. Wadsworth."]}, {"page": "Ferranti Mark 1", "response": ["Included in the Ferranti Mark 1's instruction set was a hoot command, which enabled the machine to give auditory feedback to its operators. The sound generated could be altered in pitch, a feature which was exploited when the Mark 1 made the earliest known recording of computer-generated music, playing a medley which included \"God Save the King\", \"Baa Baa Black Sheep\", and \"In the Mood\". The recording was made by the BBC towards the end of 1951, with the programming being done by Christopher Strachey, a mathematics teacher at Harrow and a friend of Alan Turing. It was not, however, the first computer to have played music; CSIRAC, Australia's first digital computer, achieved that with a rendition of \"Colonel Bogey\".", "* A simulator of the Ferranti Mark 1, executing Christopher Strachey's Love letter algorithm from 1952"]}, {"page": "1975 in science", "response": ["* May 18 \u2013 Christopher Strachey (b. 1916), English computer scientist."]}, {"page": "M4 (computer language)", "response": ["Kernighan and Ritchie developed m4 in 1977, basing it on the ideas of Christopher Strachey. The distinguishing features of this style of macro preprocessing included:"]}, {"page": "Peter Landin", "response": ["Landin was born in Sheffield, where he attended King Edward VII School; he graduated from Clare College, Cambridge University. From 1960 to 1964, he was the assistant to Christopher Strachey when the latter was an independent computer consultant in London. Most of his work was published during this period and the brief time he worked for Univac and at the Massachusetts Institute of Technology in the United States, before taking a position at Queen Mary University of London. During the 1970s and 1980s, his efforts went into building the computer science department in Queen Mary College, developing courses, and teaching students, as set forth in the foreword to the text book Programming from First Principles. On his retirement, he was appointed Emeritus Professor of Theoretical Computation at Queen Mary University of London, where in 2012, the computer science building was renamed the Peter Landin Building in his honour."]}, {"page": "First-class citizen", "response": ["The concept of first- and second-class objects was introduced by Christopher Strachey in the 1960s.Rod Burstall, \"Christopher Strachey\u2014Understanding Programming Languages\", Higher-Order and Symbolic Computation 13:52 (2000)Harold Abelson and Gerald Jay Sussman, Structure and Interpretation of Computer Programs, 2nd edition, section 1.3.4 footnote 64  He did not actually define the term strictly, but contrasted real numbers and procedures in ALGOL:", "Christopher Strachey, \"Fundamental Concepts in Programming Languages\" in Higher-Order and Symbolic Computation 13:11 (2000); though published in 2000, these are notes from lectures Strachey delivered in August, 1967"]}, {"page": "CPL (programming language)", "response": ["CPL was developed initially at the Mathematical Laboratory at the University of Cambridge as the \"Cambridge Programming Language\" and later published jointly between Cambridge and the University of London Computer Unit as the \"Combined Programming Language\". Christopher Strachey, David Barron and others were involved in its development.  (CPL was also nicknamed by some as \"Cambridge Plus London\" or \"Christopher's Programming Language\"). The first paper describing it was published in 1963, while it was being implemented on the Titan Computer at Cambridge and the Atlas Computer at London.", "* Collected papers of Christopher Strachey, section pertaining to CPL, archived at the Bodleian Library, Oxford; CSAC 71.1.80/C.136-C.184"]}, {"page": "Samson Abramsky", "response": ["Samson Abramsky  (born 12 March 1953) is a computer scientist who holds the Christopher Strachey Professorship at the Department of Computer Science (formerly the Computing Laboratory), University of Oxford. He has made contributions to the areas of domain theory, the lazy lambda calculus, strictness analysis, concurrency theory, interaction categories, geometry of interaction, game semantics and quantum computing.", "Since 2016, Abramsky has been a Fellow of Wolfson College, Oxford and Christopher Strachey Professor of Computing at Oxford University Department of Computer Science. He has also been a Fellow of the Royal Society since 2004. His research includes the development of game semantics, domain theory in logical form, and categorical quantum mechanics."]}, {"page": "Tennis for Two", "response": ["Tennis for Two is considered under some definitions to be the first video game. Other candidates include the 1947 cathode-ray tube amusement device, the earliest known interactive electronic game, though it did not run on a computing device; the 1950 Bertie the Brain, the earliest known game to run on a computer, though it used light bulbs for a display; and OXO and a draughts game by Christopher Strachey in 1952, the earliest digital computer games to display visuals on an electronic screen. Tennis for Two, though it contained no technological developments to separate it from earlier games, has the distinction of being the earliest known computer game with visuals created purely for entertainment purposes. Prior games were created primarily for academic research purposes or to demonstrate the computing power of the underlying machine, with the exception of the non-computer based cathode-ray tube amusement device. This, therefore, makes Tennis for Two the first video game under some definitions from a philosophical viewpoint rather than a technical one and a distinctive moment in the early history of video games."]}, {"page": "Strachey", "response": ["********Christopher Strachey (1916\u20131975), computer scientist; son of Oliver and his second wife Ray"]}, {"page": "OXO (video game)", "response": ["OXO, along with a draughts game by Christopher Strachey completed around the same time, is one of the earliest known games to display visuals on an electronic screen. Under some definitions, it thus may qualify as the first video game, though other definitions exclude it due to its lack of moving or real-time updating graphics.", "Douglas used the EDSAC to simulate a game of noughts and crosses, and display the state of the game on the screen. Like other early video games, after serving Douglas's purpose, the game was discarded. Douglas did not give the game a name beyond \"noughts and crosses\"; the name OXO first appeared as the name of the simulation file created by computer historian Martin Campbell-Kelly while creating a simulation of the EDSAC several decades later. Around the same time that OXO was completed, Christopher Strachey expanded a draughts program he had originally written in 1951 and ported it to the Ferranti Mark 1, which showed the state of the game on a CRT display. OXO and Strachey's draughts program are the earliest known games to display visuals on an electronic screen, though it is unclear which of the two games was displayed first. As it ran on a computing device and used a graphical display, OXO is considered under some definitions to be a contender for the first video game, though under others it does not due to its lack of moving graphics or graphics which update continuously."]}, {"page": "First-class function", "response": ["In computer science, a programming language is said to have first-class functions if it treats functions as first-class citizens. This means the language supports passing functions as arguments to other functions, returning them as the values from other functions, and assigning them to variables or storing them in data structures. Some programming language theorists require support for anonymous functions (function literals) as well.Programming language pragmatics, by Michael Lee Scott, section 11.2 \"Functional Programming\". In languages with first-class functions, the names of functions do not have any special status; they are treated like ordinary variables with a function type. The term was coined by Christopher Strachey in the context of \"functions as first-class citizens\" in the mid-1960s. (also  on 2010-02-16"]}, {"page": "International Federation for Information Processing", "response": ["IFIP was established in 1960 under the auspices of UNESCO, originally under the name of the International Federation of Information Processing Societies (IFIPS). In preparation, UNESCO had organised the first International Conference on Information Processing, which took place in June 1959 in Paris, and is now considered the first IFIP Congress. Christopher Strachey gave a paper \"Time Sharing in Large Fast Computers\" at the conference where he envisaged a programmer debugging a program at a console (like a teletype) connected to the computer, while another program was running in the computer at the same time.F. J. Corbat\u00f3, et al., The Compatible Time-Sharing System A Programmer's Guide (MIT Press, 1963) . \"Shortly after the first paper on time-shared computers by C. Strachey at the June 1959 UNESCO Information Processing conference, H. M. Teager and J. McCarthy at MIT delivered an unpublished paper \"Time-shared Program Testing\" at the August 1959 ACM Meeting.\"John McCarthy, Reminiscences on the History of Time Sharing  (Stanford University 1983). \"in 1960 `time-sharing' as a phrase was much in the air. It was, however, generally used in my sense rather than in John McCarthy's sense of a CTSS-like object. \" At the conference, he passed the concept on to J. C. R. Licklider."]}, {"page": "Intergalactic Computer Network", "response": ["Licklider first learned about time-sharing from Christopher Strachey at the inaugural UNESCO Information Processing Conference in Paris in 1959. "]}, {"page": "Artificial intelligence in video games", "response": ["Game playing was an area of research in AI from its inception. One of the first examples of AI is the computerized game of Nim made in 1951 and published in 1952. Despite being advanced technology in the year it was made, 20 years before Pong, the game took the form of a relatively small box and was able to regularly win games even against highly skilled players of the game. In 1951, using the Ferranti Mark 1 machine of the University of Manchester, Christopher Strachey wrote a checkers program and Dietrich Prinz wrote one for chess.See \"A Brief History of Computing\" at AlanTuring.net. These were among the first computer programs ever written. Arthur Samuel's checkers program, developed in the middle 50s and early 60s, eventually achieved sufficient skill to challenge a respectable amateur., Schaeffer, Jonathan. One Jump Ahead:: Challenging Human Supremacy in Checkers, 1997,2009, Springer, . Chapter 6. Work on checkers and chess would culminate in the defeat of Garry Kasparov by IBM's Deep Blue computer in 1997., p. 480-483 The first video games developed in the 1960s and early 1970s, like Spacewar!, Pong, and Gotcha (1973), were games implemented on discrete logic and strictly based on the competition of two players, without AI."]}, {"page": "Ferranti Pegasus", "response": ["Pegasus was an early British vacuum tube (valve) computer built by Ferranti, Ltd that pioneered design features to make life easier for both engineers and programmers. Originally it was named the Ferranti Package Computer as its hardware design followed that of the Elliott 401 with modular plug-in packages. Much of the development was the product of three men: W.S. (Bill) Elliott (hardware); Christopher Strachey (software) and Bernard Swann (marketing and customer support). It was Ferranti's most popular valve computer with 38 being sold. The first Pegasus was delivered in 1956 and the last was delivered in 1959. Ferranti received funding for the development from the National Research Development Corporation (NRDC).", "In those days it was common for it to be unclear whether a failure was due to the hardware or the program. As a consequence, Christopher Strachey of NRDC who was himself a brilliant programmer, recommended the following design objectives:"]}, {"page": "English draughts", "response": ["The first English draughts computer program was written by Christopher Strachey, M.A. at the National Physical Laboratory, London.The Proceedings of the Association for Computing Machinery Meeting, Toronto, 1952. Strachey finished the programme, written in his spare time, in February 1951. It ran for the first time on NPL's Pilot ACE on 30 July 1951. He soon modified the programme to run on the Manchester Mark 1."]}, {"page": "Department of Computer Science, University of Oxford", "response": ["* Samson Abramsky, Christopher Strachey Professor of Computing", "Complementing the Numerical Analysis Group, the Programming Research Group was set up in 1966 at 45 Banbury Road under the leadership of Christopher Strachey with the aim \"to bring some coherence into the present ad hoc nature of programming and software\". These two groups operated mostly separately until 1984 when both of the laboratory's research groups moved into 8\u201311 Keble Road, opposite Keble College. However the laboratory soon outgrew this space, and occupied space in 2 South Parks Road, until in 1993 the Wolfson Building opened behind the Victorian 8\u201311 Keble Road houses. The neighbouring houses at 5\u20137 Keble Road and a new \"e-Science building\" behind these provided additional space upon opening in 2007. However this space is not sufficient, and the department has additional space within the Thom Building and the Robert Hooke building. As of 2014, the department is hoping to obtain funding for a new building large enough to bring together all its activities."]}, {"page": "Joe Stoy", "response": ["Joseph E. Stoy is a British computer scientist. He originally studied physics at Oxford University. Early in his career, in the 1970s, he worked on denotational semantics with Christopher Strachey in the Programming Research Group at the Oxford University Computing Laboratory (now the Oxford University Department of Computer Science).Joe Stoy: Research interests, Oxford University Computing Laboratory, UK. He was a Fellow of Balliol College, Oxford. He has also spent time at MIT in the United States. In 2003, he co-founded Bluespec, Inc.", "* Strachey and the Oxford Programming Research Group: a talk by Joe Stoy on Christopher Strachey and the Oxford Programming Research Group."]}]}}