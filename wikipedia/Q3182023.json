{"wiki_id": "http://www.wikidata.org/entity/Q3182023", "itemLabel": "Brian Randell", "itemDescription": "British computer scientist", "wikipedia_url": "https://en.wikipedia.org/wiki/Brian_Randell", "wikipedia_page": {"main": "Brian Randell (born 1936) is a British computer scientist, and Emeritus Professor at the School of Computing, Newcastle University, United Kingdom. He specialises in research into software fault tolerance and dependability, and is a noted authority on the early pre-1950 history of computing hardware.", "link_mentions": [{"page": "Alan Turing", "response": ["Although Turing's proof was published shortly after Alonzo Church's equivalent proof using his lambda calculus, Turing's approach is considerably more accessible and intuitive than Church's. It also included a notion of a 'Universal Machine' (now known as a universal Turing machine), with the idea that such a machine could perform the tasks of any other computation machine (as indeed could Church's lambda calculus). According to the Church\u2013Turing thesis, Turing machines and the lambda calculus are capable of computing anything that is computable. John von Neumann acknowledged that the central concept of the modern computer was due to Turing's paper.\"von Neumann\u00a0... firmly emphasised to me, and to others I am sure, that the fundamental conception is owing to Turing\u2014insofar as not anticipated by Babbage, Lovelace and others.\" Letter by Stanley Frankel to Brian Randell, 1972, quoted in Jack Copeland (2004) The Essential Turing, p.\u00a022. To this day, Turing machines are a central object of study in theory of computation."]}, {"page": "ALGOL", "response": ["|Whetstone|| 1964 || Brian Randell and L. J. Russell || UK || Atomic Power Division of English Electric Company. Precursor to Ferranti Pegasus, National Physical Laboratories ACE and English Electric DEUCE implementations. || English Electric Company KDF9", "* Brian Randell and L. J. Russell, ALGOL 60 Implementation: The Translation and Use of ALGOL 60 Programs on a Computer. Academic Press, 1964. The design of the Whetstone Compiler. One of the early published descriptions of implementing a compiler. See the related papers: Whetstone Algol Revisited, and The Whetstone KDF9 Algol Translator by Brian Randell"]}, {"page": "Computer science", "response": ["Wilhelm Schickard designed and constructed the first working mechanical calculator in 1623. In 1673, Gottfried Leibniz demonstrated a digital mechanical calculator, called the Stepped Reckoner. Leibniz may be considered the first computer scientist and information theorist, for, among other reasons, documenting the binary number system. In 1820, Thomas de Colmar launched the mechanical calculator industryIn 1851 when he invented his simplified arithmometer, the first calculating machine strong enough and reliable enough to be used daily in an office environment. Charles Babbage started the design of the first automatic mechanical calculator, his Difference Engine, in 1822, which eventually gave him the idea of the first programmable mechanical calculator, his Analytical Engine. He started developing this machine in 1834, and \"in less than two years, he had sketched out many of the salient features of the modern computer\". \"A crucial step was the adoption of a punched card system derived from the Jacquard loom\" making it infinitely programmable.\"The introduction of punched cards into the new engine was important not only as a more convenient form of control than the drums, or because programs could now be of unlimited extent, and could be stored and repeated without the danger of introducing errors in setting the machine by hand; it was important also because it served to crystallize Babbage's feeling that he had invented something really new, something much more than a sophisticated calculating machine.\" Bruce Collier, 1970 In 1843, during the translation of a French article on the Analytical Engine, Ada Lovelace wrote, in one of the many notes she included, an algorithm to compute the Bernoulli numbers, which is considered to be the first published algorithm ever specifically tailored for implementation on a computer. Around 1885, Herman Hollerith invented the tabulator, which used punched cards to process statistical information; eventually his company became part of IBM. Following Babbage, although unaware of his earlier work, Percy Ludgate in 1909 published the 2nd of the only two designs for mechanical analytical engines in history. In 1937, one hundred years after Babbage's impossible dream, Howard Aiken convinced IBM, which was making all kinds of punched card equipment and was also in the calculator business\"In this sense Aiken needed IBM, whose technology included the use of punched cards, the accumulation of numerical data, and the transfer of numerical data from one register to another\", Bernard Cohen, p.44 (2000) to develop his giant programmable calculator, the ASCC/Harvard Mark I, based on Babbage's Analytical Engine, which itself used cards and a central computing unit. When the machine was finished, some hailed it as \"Babbage's dream come true\".Brian Randell, p. 187, 1975"]}, {"page": "Colossus computer", "response": ["Professor Brian Randell, who unearthed information about Colossus in the 1970s, commented on this, saying that:"]}, {"page": "List of computer scientists", "response": ["* Brian Randell \u2013 ALGOL 60, software fault tolerance, dependability, pre-1950 history of computing hardware"]}, {"page": "List of programmers", "response": ["*Brian Randell \u2013 ALGOL 60, software fault tolerance, dependability, pre-1950 history of computing hardware"]}, {"page": "Historical revisionism", "response": ["*Access to new data: much historical data has been lost. Even archives must make decisions based on space and interest on what original material to obtain or to keep. At times, documents are discovered or publicized that give new views of well established events. Archived material may be sealed by governments for many years, either to hide political scandals or to protect information vital for national security. When the archives are opened, they can alter the historical perspective on an event. For example, with the release of the ULTRA archives in the 1970s under the British thirty-year rule, much of the Allied high command tactical decisiomaking process was re-evaluated, particularly the Battle of the Atlantic. Before the release of the ULTRA archives, there was much debate over whether Field Marshal Bernard Montgomery could have known that Arnhem was heavily garrisoned. With the release of the archives, which indicated that they were, the balance of the evidence swung in the direction of his detractors. The release of the ULTRA archives also forced a re-evaluation of the history of the electronic computer.In 1972, before the release of official documents about ULTRA, Herman Goldstine wrote in The Computer from Pascal to von Neumann page 321 that: \"Britain had such vitality that it could immediately after the war embark on so many well-conceived and well-executed projects in the computer field.\" In 1976 after the archive were opened Brian Randell wrote in The COLOSSUS on page 87 that: \"the COLOSSUS project was an important source of this vitality, one that has been largely unappreciated, as has the significance of its places in the chronology of the invention of the digital computer.\" "]}, {"page": "History of computing hardware", "response": ["He also introduced the notion of a \"universal machine\" (now known as a universal Turing machine), with the idea that such a machine could perform the tasks of any other machine, or in other words, it is provably capable of computing anything that is computable by executing a program stored on tape, allowing the machine to be programmable. Von Neumann acknowledged that the central concept of the modern computer was due to this paper. \"von Neumann\u00a0... firmly emphasized to me, and to others I am sure, that the fundamental conception is owing to Turing\u2014insofar as not anticipated by Babbage, Lovelace and others.\" Letter by Stanley Frankel to Brian Randell, 1972. Turing machines are to this day a central object of study in theory of computation. Except for the limitations imposed by their finite memory stores, modern computers are said to be Turing-complete, which is to say, they have algorithm execution capability equivalent to a universal Turing machine."]}, {"page": "Remote procedure call", "response": ["One of the earliest practical implementations was in 1982 by Brian Randell and colleagues for their Newcastle Connection between UNIX machines.  This was soon followed by \"Lupine\" by Andrew Birrell and Bruce Nelson in the Cedar environment at Xerox PARC. Lupine automatically generated stubs, providing type-safe bindings, and used an efficient protocol for communication. One of the first business uses of RPC was by Xerox under the name \"Courier\" in 1981. The first popular implementation of RPC on Unix was Sun's RPC (now called ONC RPC), used as the basis for Network File System (NFS)."]}, {"page": "Software crisis", "response": ["* Brian Randell: The NATO Software Engineering Conferences"]}, {"page": "Mechanical calculator", "response": ["Charles Babbage designed two new kinds of mechanical calculators, which were so big that they required the power of a steam engine to operate, and that were too sophisticated to be built in his lifetime.  The first one was an automatic mechanical calculator, his difference engine, which could automatically compute and print mathematical tables. In 1855, Georg Scheutz became the first of a handful of designers to succeed at building a smaller and simpler model of his difference engine.#MARG,Jean Marguin p. 171, (1994) The second one was a programmable mechanical calculator, his analytical engine, which Babbage started to design in 1834; \"in less than two years he had sketched out many of the salient features of the modern computer. A crucial step was the adoption of a punched card system derived from the Jacquard loom\"Anthony Hyman, Charles Babbage, pioneer of the computer, 1982 making it infinitely programmable.\"The introduction of punched cards into the new engine was important not only as a more convenient form of control than the drums, or because programs could now be of unlimited extent, and could be stored and repeated without the danger of introducing errors in setting the machine by hand; it was important also because it served to crystallize Babbage's feeling that he had invented something really new, something much more than a sophisticated calculating machine.\" Bruce Collier, 1970 In 1937, Howard Aiken convinced IBM to design and build the ASCC/Mark I, the first machine of its kind, based on the architecture of the analytical engine;I. Bernard Cohen, p. 66-67, (2000) when the machine was finished some hailed it as \"Babbage's dream come true\".Brian Randell, p. 187, 1975", "* In 1834, Babbage started to design his analytical engine, which will become the undisputed ancestor of the modern mainframe computer\"It is reasonable to inquire, therefore, whether it is possible to devise a machine which will do for mathematical computation what the automatic lathe has done for engineering. The first suggestion that such a machine could be made came more than a hundred years ago from the mathematician Charles Babbage. Babbage's ideas have only been properly appreciated in the last ten years, but we now realize that he understood clearly all the fundamental principles which are embodied in modern digital computers\" B. V. Bowden, 1953, pp. 6,7 with two separate input streams for data and program (a primitive Harvard architecture), printers for outputting results (three different kind), processing unit (mill), memory (store) and the first-ever set of programming instructions. In the proposal that Howard Aiken gave IBM in 1937 while requesting funding for the Harvard Mark I which became IBM's entry machine in the computer industry, we can read: \"Few calculating machines have been designed strictly for application to scientific investigations, the notable exceptions being those of Charles Babbage and others who followed him. In 1812 Babbage conceived the idea of a calculating machine of a higher type than those previously constructed to be used for calculating and printing tables of mathematical functions. ....After abandoning the difference engine, Babbage devoted his energy to the design and construction of an analytical engine of far higher powers than the difference engine...\"Howard Aiken, 1937, reprinted in The origins of Digital computers, Selected Papers, Edited by Brian Randell, 1973"]}, {"page": "Network-attached storage", "response": ["In the early 1980s, the \"Newcastle Connection\" by Brian Randell and his colleagues at Newcastle University demonstrated and developed remote file access across a set of UNIX machines. Novell's NetWare server operating system and NCP protocol was released in 1983. Following the Newcastle Connection, Sun Microsystems' 1984 release of NFS allowed network servers to share their storage space with networked clients. 3Com and Microsoft would develop the LAN Manager software and protocol to further this new market. 3Com's 3Server and 3+Share software was the first purpose-built server (including proprietary hardware, software, and multiple disks) for open systems servers."]}, {"page": "List of important publications in computer science", "response": ["* Brian Randell and L. J. Russell, ALGOL 60 Implementation: The Translation and Use of ALGOL 60 Programs on a Computer. Academic Press, 1964. The design of the Whetstone Compiler. One of the early published descriptions of implementing a compiler. See the related papers: Whetstone Algol Revisited, and The Whetstone KDF9 Algol Translator by Brian Randell", "* Peter Naur, Brian Randell (eds.)"]}, {"page": "Dependability", "response": ["In systems engineering, dependability is a measure of a system's availability, reliability, maintainability, and in some cases, other characteristics such as durability, safety and security. IEC, Electropedia del 192 Dependability, http://www.electropedia.org, select 192 Dependability, see 192-01-22 Dependability.  In real-time computing, dependability is the ability to provide services that can be trusted within a time-period.A. Avizienis, J.-C. Laprie, Brian Randell, and C. Landwehr, \"Basic Concepts and Taxonomy of Dependable and Secure Computing,\" IEEE Transactions on Dependable and Secure Computing, vol. 1, pp. 11-33, 2004. The service guarantees must hold even when the system is subject to attacks or natural failures. ", "As interest in fault tolerance and system reliability increased in the 1960s and 1970s, dependability came to be a measure of [x] as measures of reliability came to encompass additional measures like safety and integrity.Brian Randell, \"Software Dependability: A Personal View\", in the Proc of the 25th International Symposium on Fault-Tolerant Computing (FTCS-25), California, USA, pp 35-41, June 1995.  In the early 1980s, Jean-Claude Laprie thus chose dependability as the term to encompass studies of fault tolerance and system reliability without the extension of meaning inherent in reliability.J.C. Laprie. \"Dependable Computing and Fault Tolerance: Concepts and terminology,\" in Proc. 15th IEEE Int. Symp. on Fault-Tolerant Computing, 1985", "Traditionally, dependability for a system incorporates availability, reliability, maintainability but since the 1980s, safety and security have been added to measures of dependability.A. Avizienis, J.-C. Laprie and Brian Randell: Fundamental Concepts of Dependability. Research Report No 1145, Lydford g DrAAS-CNRS, April 2001", "Faults, Errors and Failures operate according to a mechanism. This mechanism is sometimes known as a Fault-Error-Failure chain.A. Avizienis, V. Magnus U, J. C. Laprie, and Brian Randell, \"Fundamental Concepts of Dependability,\" presented at ISW-2000, Cambridge, MA, 2000. As a general rule a fault, when activated, can lead to an error (which is an invalid state) and the invalid state generated by an error may lead to another error or a failure (which is an observable deviation from the specified behavior at the system boundary)."]}, {"page": "ALGOL 60", "response": ["|Whetstone|| 1964 || Brian Randell and Lawford John Russell || UK || Atomic Power Division of English Electric Company. Precursor to Ferranti Pegasus, National Physical Laboratories ACE and English Electric DEUCE implementations. || English Electric Company KDF9", "*  The design of the Whetstone Compiler. One of the early published descriptions of implementing a compiler. See the related papers: Whetstone Algol Revisited, and The Whetstone KDF9 Algol Translator by Brian Randell"]}, {"page": "ALGOL 68", "response": ["* March 1970: Minority report, ALGOL Bulletin AB31.1.1 - signed by Edsger Dijkstra, Fraser Duncan, Jan Garwick, Tony Hoare,  Brian Randell, Gerhard Seegm\u00fcller, Wlad Turski, and  Mike Woodger."]}]}}