{"wiki_id": "http://www.wikidata.org/entity/Q92944", "itemLabel": "David Wheeler", "itemDescription": "British computer scientist", "wikipedia_url": "https://en.wikipedia.org/wiki/David_Wheeler_(computer_scientist)", "wikipedia_page": {"main": "David John Wheeler FRS (9 February 1927 \u2013 13 December 2004) was a computer scientist and professor of computer science at the University of Cambridge.", "link_mentions": [{"page": "Assembly language", "response": ["In late 1948, the Electronic Delay Storage Automatic Calculator (EDSAC) had an assembler (named \"initial orders\") integrated into its bootstrap program. It used one-letter mnemonics developed by David Wheeler, who is credited by the IEEE Computer Society as the creator of the first \"assembler\". Reports on the EDSAC introduced the term \"assembly\" for the process of combining fields into an instruction word. SOAP (Symbolic Optimal Assembly Program) was an assembly language for the IBM 650 computer written by Stan Poley in 1955."]}, {"page": "Bjarne Stroustrup", "response": ["In 1979, he received a PhD in computer science from the University of Cambridge, where he was supervised by David Wheeler. His thesis concerned communication in distributed computer systems."]}, {"page": "Binary search tree", "response": ["The binary search tree algorithm was discovered independently by several researchers, including P.F. Windley, Andrew Donald Booth, Andrew Colin, Thomas N. Hibbard, and attributed to Conway Berners-Lee and David Wheeler, in 1960 for storing labeled data in magnetic tapes."]}, {"page": "List of computer scientists", "response": ["* David Wheeler \u2013 EDSAC, subroutines"]}, {"page": "EDSAC", "response": ["Initially registers were limited to an accumulator and a multiplier register. In 1953, David Wheeler, returning from a stay at the University of Illinois, designed an index register as an extension to the original EDSAC hardware.", "David Wheeler, who earned the world's first Computer Science PhD working on the project, is credited with inventing the concept of a subroutine. Users wrote programs that called a routine by jumping to the start of the subroutine with the return address (i.e. the location-plus-one of the jump itself) in the accumulator (a Wheeler Jump). By convention the subroutine expected this, and the first thing it did was to modify its concluding jump instruction to that return address. Multiple and nested subroutines could be called so long as the user knew the length of each one in order to calculate the location to jump to; recursive calls were forbidden. The user then copied the code for the subroutine from a master tape onto their own tape following the end of their own program. (However, Turing discussed subroutines in a paper of 1945 on design proposals for the NPL ACE, going so far as to invent the concept of a return-address stack, which would have allowed recursion.)", "* The Preparation of Programs for an Electronic Digital Computer by Professor Sir Maurice Wilkes, David Wheeler and Stanley Gill, Addison\u2013Wesley, Edition 1, 1951 archive.org.", "* Oral history interview with David Wheeler, 14 May 1987. Charles Babbage Institute, University of Minnesota. Wheeler was a research student at the University Mathematical Laboratory at Cambridge in 1948\u20131951 and a pioneer programmer on the EDSAC project. Wheeler discusses projects that were run on EDSAC, user-oriented programming methods, and the influence of EDSAC on the ILLIAC, the ORDVAC, and the IBM 701. Wheeler also notes visits by Douglas Hartree, Nelson Blackman (of ONR), Peter Naur, Aad van Wijngarden, Arthur van der Poel, Friedrich Bauer, and Louis Couffignal."]}, {"page": "List of programmers", "response": ["*David Wheeler \u2013 cocreated subroutine; designed WAKE; co-designed Tiny Encryption Algorithm, XTEA, Burrows\u2013Wheeler transform"]}, {"page": "Timeline of programming languages", "response": ["| David Wheeler"]}, {"page": "Burrows\u2013Wheeler transform", "response": ["The Burrows\u2013Wheeler transform (BWT, also called block-sorting compression) rearranges a character string into runs of similar characters. This is useful for compression, since it tends to be easy to compress a string that has runs of repeated characters by techniques such as move-to-front transform and run-length encoding.  More importantly, the transformation is reversible, without needing to store any additional data except the position of the first original character. The BWT is thus a \"free\" method of improving the efficiency of text compression algorithms, costing only some extra computation. The Burrows\u2013Wheeler transform is an algorithm used to prepare data for use with data compression techniques such as bzip2. It was invented by Michael Burrows and David Wheeler in 1994 while Burrows was working at DEC Systems Research Center in Palo Alto, California. It is based on a previously unpublished transformation discovered by Wheeler in 1983. The  algorithm can be implemented efficiently using a suffix array thus reaching linear time complexity."]}, {"page": "Booting", "response": ["The EDSAC system, the second stored-program computer to be built, used stepping switches to transfer a fixed program into memory when its start button was pressed. The program stored on this device, which David Wheeler completed in late 1948, loaded further instructions from punched tape and then executed them."]}, {"page": "Butler Lampson", "response": ["Lampson is often quoted as saying, \"Any problem in computer science can be solved with another level of indirection,\" but in his Turing Award Lecture in 1993, Lampson himself attributes this saying to David Wheeler."]}, {"page": "Index of cryptography articles", "response": ["David Wheeler (computer scientist)   \u2022"]}, {"page": "Cambridge Ring (computer network)", "response": ["People associated with the project include Andy Hopper, David Wheeler, Maurice Wilkes, and Roger Needham."]}, {"page": "Timeline of algorithms", "response": ["* 1994 \u2013 Burrows\u2013Wheeler transform developed by Michael Burrows and David Wheeler"]}, {"page": "Maurice Wilkes", "response": ["Since his laboratory had its own funding, he was immediately able to start work on a small practical machine, EDSAC (for \"Electronic Delay Storage Automatic Calculator\"), once back at Cambridge. He decided that his mandate was not to invent a better computer, but simply to make one available to the university. Therefore, his approach was relentlessly practical. He used only proven methods for constructing each part of the computer. The resulting computer was slower and smaller than other planned contemporary computers. However, his laboratory's computer was the second practical stored-program computer to be completed and operated successfully from May 1949, well over a year before the much larger and more complex EDVAC. In 1950, along with David Wheeler, Wilkes used EDSAC to solve a differential equation relating to gene frequencies in a paper by Ronald Fisher.Gene Frequencies in a Cline Determined by Selection and Diffusion, R. A. Fisher, Biometrics, Vol. 6, No. 4 (Dec., 1950), pp. 353\u2013361. This represents the first use of a computer for a problem in the field of biology.", "Wilkes was a founder member of the British Computer Society (BCS) and its first president (1957\u20131960). He received the Turing Award in 1967, with the following citation: \"Professor Wilkes is best known as the builder and designer of the EDSAC, the first computer with an internally stored program. Built in 1949, the EDSAC used a mercury delay-line memory. He is also known as the author, with David Wheeler and Stanley Gill, of a volume on Preparation of Programs for Electronic Digital Computers in 1951, in which program libraries were effectively introduced.\" In 1968 he received the Harry H.\u00a0Goode Memorial Award, with the following citation: \"For his many original achievements in the computer field, both in engineering and software, and for his contributions to the growth of professional society activities and to international cooperation among computer professionals.\""]}, {"page": "Tiny Encryption Algorithm", "response": ["In cryptography, the Tiny Encryption Algorithm (TEA) is a block cipher notable for its simplicity of description and implementation, typically a few lines of code. It was designed by David Wheeler and Roger Needham of the Cambridge Computer Laboratory; it was first  presented at the Fast Software Encryption workshop in Leuven in 1994, and first published in the proceedings of that workshop.", "Following is an adaptation of the reference encryption and decryption routines in C, released into the public domain by David Wheeler and Roger Needham:"]}, {"page": "XTEA", "response": ["In cryptography, XTEA (eXtended TEA) is a block cipher designed to correct weaknesses in TEA. The cipher's designers were David Wheeler and Roger Needham of the Cambridge Computer Laboratory, and the algorithm was presented in an unpublished technical report in 1997 (Needham and Wheeler, 1997). It is not subject to any patents.", "This standard C source code, adapted from the reference code released into the public domain by David Wheeler and Roger Needham, encrypts and decrypts using XTEA:"]}, {"page": "Department of Computer Science and Technology, University of Cambridge", "response": ["* David Wheeler"]}, {"page": "Abstraction layer", "response": ["A famous aphorism of David Wheeler is \"All problems in computer science can be solved by another level of indirection\". This is often deliberately misquoted with \"abstraction\" substituted for \"indirection\". It is also sometimes misattributed to Butler Lampson. Kevlin Henney's corollary to this is, \"...except for the problem of too many layers of indirection.\""]}, {"page": "WAKE (cipher)", "response": ["In cryptography, WAKE is a stream cipher designed by David Wheeler in 1993."]}, {"page": "2004 in the United Kingdom", "response": ["* 13 December \u2013 David Wheeler, computer scientist (born 1927)"]}, {"page": "Andy Hopper", "response": ["Hopper was educated at Quintin Kynaston School in London after which he went to study for a Bachelor of Science degree at Swansea University before going to the University of Cambridge Computer Laboratory and Trinity Hall, Cambridge in 1974 for postgraduate work. Hopper was awarded his PhD in 1978 for research into Local area computer communications networks supervised by David Wheeler."]}, {"page": "List of University of Cambridge people", "response": ["*David Wheeler (Trinity/Darwin)"]}, {"page": "King Edward VI Camp Hill School for Boys", "response": ["* David Wheeler, helped invent the subroutine and some encryption algorithms, and Professor of Computer Science at the University of Cambridge from 1978\u201394"]}, {"page": "ILLIAC", "response": ["* Oral history interview with Gene H. Golub. Charles Babbage Institute, University of Minnesota.  Golub discusses the construction of the ILLIAC computer, the work of Ralph Meager and David Wheeler on the ILLIAC design; programming; and the early users of the ILLIAC at the University of Illinois.", "* Oral history interviews on ILLIAC computers. Charles Babbage Institute, University of Minnesota.  Interviews include Herman H. Goldstine and relation to IAS computer; Stephen Lukasik and ARPA funding; David Wheeler who worked on ILLIAC and taught at Illinois 1951-53."]}, {"page": "Titan (1963 computer)", "response": ["The Atlas hardware arrived in Cambridge in 1963, although software design was already underway. David Wheeler was in charge of the joint effort between the University and Ferranti."]}, {"page": "Kevlin Henney", "response": ["Henney is a member of the ACCU, and gave the keynote address at the 2001 ACCU conference on the subject of writing less code, because \"there is no code faster than no code\" and \"less code, equals less bugs\" (of which he is an active presenter). He is also a speaker at OOPSLA, most recently speaking at OOPSLA 2005. In October 2009, Henney presented The Uncertainty Principle at the 2nd Annual PHP North West Conference in Manchester, UK. He has also been credited with the remark \"...except for the problem of too many layers of indirection\" in response to the famous aphorism of David Wheeler: \"All problems in computer science can be solved by another level of indirection.\""]}, {"page": "Timeline of information theory", "response": ["* 1994 12px \u2013 Michael Burrows and David Wheeler publish the Burrows\u2013Wheeler transform, later to find use in bzip2"]}, {"page": "Harlan Anderson", "response": ["Anderson earned both a B.S. and M.S. in Physics from the University of Illinois at Urbana\u2013Champaign in the early 1950s, where he became interested in computers.Harlan Anderson: Biography, Computer History Museum. He took programming courses for the ILLIAC I computer, which was under construction at this time. The courses were taught by the computer pioneer, David Wheeler of the University of Cambridge Computer Laboratory. He received a B.S. degree in Engineering Physics and a Masters in Physics in 1951 and 1952 respectively., Board of Trustees, Rensselaer Polytechnic Institute, USA."]}]}}